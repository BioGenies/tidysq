% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/support_funs.R
\name{get_sq_alphabet}
\alias{get_sq_alphabet}
\title{Get alphabet of given sq object.}
\usage{
get_sq_alphabet(sq)
}
\arguments{
\item{sq}{a \code{\link{sq}} object to be recognized.}
}
\value{
A character vector of letters of the alphabet.
}
\description{
Function returns amino acid, nucleotide or atypical alphabet based on a \code{\link{sq}} 
object type.
}
\details{
This function allows returning alphabet of \code{sq} object which is a character
or numeric vector. The function reads provided \code{\link{sq}} object and determines,
which kind of sequences user assigned to a \code{\link{sq}} object (nucleotide, amino acid,
atypical or encoded one).

If  \code{\link{sq}} type is \strong{ami} the function returns a set of 20 aminoacids with
gap (-) and stop codon (*) letter. If a \code{\link{sq}} contains \strong{nuc} sequences
the function returns a set of 5 nucleotides with gap (-) element. If \code{sq} has 
additionally \strong{cln} subtype, ambiguous letters are returned as well.

If \code{\link{sq}} type is \strong{unt} or \strong{atp} the function returns a list of 
letters present in sequences of a \code{\link{sq}} object.

If type is \strong{enc} a numeric vector of values encoded for letters will be returned
(see \code{\link{encode}}).

The details about amino acid and nucleotide 
alphabet can be checked in \code{\link{aminoacids_df}} and \code{\link{nucleotides_df}} 
respectively. General information about alphabets and types of \code{sq} objects can 
be found in \code{\link{sq}} class documentation.
}
\examples{
# Creating an object to work on:
sq_nucleotides <- construct_sq(c("ACGATTAGACG","GGATA"), type = "nuc")
sq_amino_acids <- construct_sq(c("MMVTAAV"), type = "ami")
sq_untyped <- construct_sq(c("ACGA&&TTAGACG&"), type = "unt")

# Testing nucleotide sq object with defined type:
get_sq_alphabet(sq_nucleotides)

# Testing amino acid sq object with defined type:
get_sq_alphabet(sq_amino_acids)

# Testing nucleotide sq object without defined type:
get_sq_alphabet(sq_untyped)

  
}
\seealso{
\code{\link{sq}} \code{\link{construct_sq}} \code{\link{encode}}
}
