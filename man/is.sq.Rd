% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/util_methods.R
\name{is.sq}
\alias{is.sq}
\alias{is.amisq}
\alias{is.nucsq}
\alias{is.untsq}
\alias{is.atpsq}
\alias{is.encsq}
\title{Check if object has specified type}
\usage{
is.sq(x)

is.amisq(x)

is.nucsq(x)

is.untsq(x)

is.atpsq(x)

is.encsq(x)
}
\arguments{
\item{x}{an object to be checked.}
}
\value{
A \code{\link{logical}} value - \code{TRUE} if \code{x} has specified type, \code{FALSE}
otherwise.
}
\description{
Function to checks if object is a \code{\link{sq}} object without specifying type or
if it is a \code{\link{sq}} object with specific type.
}
\details{
These function does not only check objects classes - they also check if their format is 
correct (e.g. if they have alphabet parameter, if they have exactly one type, if they are
list of raws, etc. - to see details, how does \code{sq} object look like under the hood, 
read \code{\link[=sq]{sq class}} manual).
}
\examples{
sq_ami <- construct_sq(c("CVMPQGQQ", "AHLC--PPQ"))
sq_nuc <- construct_sq(c("CGAUUACG", "UUCUAGA", "UUCA"))
sq_unt <- construct_sq("BAHHAJJ&HAN&JD&")
sq_atp <- construct_sq(c("mALPVQAmAmA", "mAmAPQ"), non_standard = "mA")
sq_enc <- encode(sq_nuc, c(A = 1.23, C = -0.72, G = 0.97, U = 3.01))

is.sq(sq_ami)
is.sq(sq_nuc)
is.sq(sq_unt)
is.sq(sq_atp)
is.sq(sq_enc)

is.sq(c(1,2,3))
is.sq(LETTERS)
is.sq(TRUE)
is.sq(NULL)

is.amisq(sq_ami)
is.nucsq(sq_nuc)
is.atpsq(sq_atp)
is.untsq(sq_unt)
is.encsq(sq_enc)

is.nucsq(sq_enc)
is.amisq(sq_atp)
is.untsq(sq_ami)
}
\seealso{
\code{\link{sq}}
}
