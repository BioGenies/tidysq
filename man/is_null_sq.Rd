% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_null_sq.R
\name{is_null_sq}
\alias{is_null_sq}
\title{Test if a sequence is empty}
\usage{
is_null_sq(sq)
}
\arguments{
\item{sq}{a\code{\link{sq}} object to be tested}
}
\value{
A logical vector of the same length as input sq, 
indicating which elements are \code{NULL sq}, i.e., an empty sequence
of length 0.
}
\description{
Test a sq object for presence of empty sequences
}
\details{
This function allows identification of empty sequences (that
have length 0) represented by the \code{NULL sq} values in the sq object. 
It returns a logical for every element of the sq object - \code{TRUE} if
its value is \code{NULL sq} and \code{FALSE} otherwise. \code{NULL sq} 
values may be introduced as a result of \code{\link{clean}} and 
\code{\link{remove_na}} functions. The first one replaces sequences 
containing ambiguous elements with \code{NULL sq} values, whereas the 
latter replaces \code{NA} values (which may be introduced by 
\code{\link{bite}}) with \code{NULL sq}.
}
\examples{
# Creating an object to work on:
sq <- construct_sq(c("ACGATTAGACG", "", "GACGANTCCAGNTAC"), type = "dna")

# Testing for presence of empty sequences:
is_null_sq(sq)

# Testing for presence of empty sequences after cleaning - sequence 
# containing ambiguous elements is replaced by NULL sq:
cln_sq <- clean(sq)
is_null_sq(cln_sq)

# Testing for presence of empty sequences after using bite
# and removing NA.
# Extracting letters from first to fifteenth - NA introduced:
bitten_sq <- bite(sq, 1:15)
# Removing NA:
rm_bitten_sq <- remove_na(bitten_sq)
# Testing for presence of empty sequences:
is_null_sq(rm_bitten_sq)


}
\seealso{
\code{\link{sq}} \code{\link{clean}}
}
