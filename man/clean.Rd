% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean.R
\name{clean}
\alias{clean}
\title{Clean sequences containing ambiguous elements}
\usage{
clean(sq, only_elements = FALSE)
}
\arguments{
\item{sq}{\code{\link{sq}} object of type 'ami' or 'nuc'}

\item{only_elements}{logical indicating if only ambiguous elements
(i.e., matching more than one amino acid/nucleotide) of sequences should
be removed. If \code{FALSE} (default) whole sequences containing ambiguous 
elements are removed.}
}
\value{
a \code{\link{sq}} object with the \code{\link{clnsq}} subtype.
}
\description{
Remove sequences containing ambiguous elements or remove ambiguous 
elements from sequences in a sq object.
}
\details{
This function allows cleaning of sequences containing ambiguous
elements. By default, sequences containing ambiguous elements are removed 
and \code{NULL sq} values are introduced in their place. If 
\code{only_elements = TRUE} then only ambiguous elements are removed 
from sequences in sq object. Ambiguous letters of the amino acid alphabet 
are: B, J, O, U, X, Z, and of the nucleotide alphabet: W, S, M, K, R, 
Y, B, D, H, V, N. They are marked as 'amb' in \code{\link{aminoacids_df}} 
and \code{\link{nucleotides_df}} respectively. \code{NULL sq} values can
be identified using \code{\link{is_null_sq}} function.
}
\examples{
# Creating objects to work on:
sq_ami <- construct_sq(c("MIAANYTWIL","TIAALGNIIYRAIE", 
                         "NYERTGHLI", "MAYXXXIALN"), type = "ami")
sq_nuc <- construct_sq(c("ATGCAGGA", "GACCGAACGAN", 
                         "TGACGAGCTTA", "ACTNNAGCN"), type = "nuc")

# Removing sequences with ambiguous elements:
clean(sq_ami)
clean(sq_nuc)

# Removing ambiguous elements from sequences:
clean(sq_ami, only_elements = TRUE)
clean(sq_nuc, only_elements = TRUE)

# Testing for presence of empty sequences after cleaning:
cln_sq <- clean(sq_ami)
is_null_sq(cln_sq)


}
\seealso{
sq clnsq aminoacids_df nucleotides_df is_null_sq
}
