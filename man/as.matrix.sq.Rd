% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods_sq.R
\name{as.matrix.sq}
\alias{as.matrix.sq}
\title{Convert sq object into matrix}
\usage{
\method{as.matrix}{sq}(x, ...)
}
\arguments{
\item{x}{a \code{\link{sq}} object to be converted.}

\item{...}{further arguments to be passed from or to other methods.}
}
\value{
A \code{\link{matrix}} with number of rows the same as number of sequences
and number of columns corresponding to the length of the longest sequence
in the converted sq object. Matrix is either character (if type of \code{sq} is
\strong{ami}, \strong{nuc}, \strong{atp} or \strong{unt}) or numeric (if type
is \strong{enc}).
}
\description{
Coerce sequences from a \code{\link{sq}} object to a 
\code{\link{matrix}}, in which rows correspond to sequences and columns to positions
}
\details{
This method for class \code{sq} allows converting sequences from
the sq object into a matrix. Each row corresponds to the separate sequence
from the sq object, whereas each column indicates a single position within 
a sequence. Dimensions of matrix are determined by the number of sequences 
(rows) and the length of the longest sequence (columns). If a length of
sequence is smaller than the length of the longest sequence, the remaining
columns will be filled with \code{\link{NA}}. All attributes of the input \code{sq} are lost 
during the conversion to matrix.
}
\examples{
# Creating objects to work on:
sq_same_len <- construct_sq(c("CGATAGACA", "TGACAAAAC", "GTGACCGTA"),
                            type = 'nuc')
sq_diff_len <- construct_sq(c("CTGAATGCAGTACCGTAAT", "ATGCCGTAAATGCCAT", 
                              "CAGACCANNNATAG"), type = 'nuc')

# Converting sq object containing sequences of the same lengths to matrix:
as.matrix(sq_same_len)

# Converting sq object containing sequences of different lengths to 
# matrix - NA introduced:
as.matrix(sq_diff_len)

}
\seealso{
\code{\link{sq}}
}
