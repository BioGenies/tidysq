% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_fasta.R
\name{read_fasta}
\alias{read_fasta}
\alias{read_fasta_ami}
\alias{read_fasta_dna}
\alias{read_fasta_rna}
\title{Read a FASTA file}
\usage{
read_fasta(file, type = NULL, is_clean = NULL, non_standard = NULL)

read_fasta_ami(file, is_clean = NULL)

read_fasta_dna(file, is_clean = NULL)

read_fasta_rna(file, is_clean = NULL)
}
\arguments{
\item{file}{a \code{\link{character}} string indicating path to file or url.}
}
\value{
A \code{\link[tibble]{tibble}} with number of rows equal to the number of sequences 
and two columns: 'name' - specifying how to call a sequence - and 'sq' - 
containing the sequence itself.
}
\description{
Reads a FASTA file, that contains nucleotide or amino acid sequences, and returns
a \code{\link[tibble]{tibble}} with number of rows equal to the number of sequences 
and the following columns: 'name' - specifying how to call a sequence - and 'sq' - 
containing the sequence itself.
}
\details{
All rules of creating sq objects are the same as in \code{\link{construct_sq}}.

Functions \code{read_fasta_ami}, \code{read_fasta_dna} and \code{read_fasta_rna}
are wrappers around \code{read_fasta} with specified \code{type} parameter -
accordingly "ami", "dna" and "rna". You can also pass "is_clean" parameter
to those functions, but you cannot pass "non_standard".
}
\examples{
fasta_file <- system.file(package = "tidysq", 
                     "sample_fasta/sample_ami.fasta")
read_fasta(fasta_file)
read_fasta_ami(fasta_file)
\dontrun{
read_fasta("https://www.uniprot.org/uniprot/P28307.fasta")
}
}
\seealso{
\code{\link[base]{readLines}} \code{\link{construct_sq}}
}
