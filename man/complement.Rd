% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/complement.R
\name{complement}
\alias{complement}
\title{Create complement sequence from nucseq object}
\usage{
complement(nucsq, is_dna = NULL)
}
\arguments{
\item{nucsq}{\code{\link{nucsq}} object of type 'nuc'.}

\item{is_dna}{logical indicating if entered sequence is dna or rna. If 'is_dna' is \code{TRUE}, sequences cannot contain 'U' (uracil);
if is \code{FALSE}, sequences cannot contain 'T' (thymine). If \code{NULL} (default) the sequence type is not specified.}
}
\value{
\code{\link{nucsq}} object of the same type as input nucsq but built of complementary nucleotides to entered sequence.
}
\description{
Create complementary sequence from given nucleoide sequence 
according to complementarity.
}
\details{
This function allows obtaining  complement sequence which is created by 
matching elements (nucleotides) with complementarity to input nucsq object. If \code{is_dna = TRUE} entered sequence is dna. 
If \code{is_dna = FALSE} entered sequence is rna. By default the sequence type is not specified and function
needs to guess which type of sequence was entered. If sequence contain 'U' without 'T' the type will be set to rna.
If sequence contain 'T' without 'U' the type will be set to dna. If both 'U' and 'T' are present in the sequence
or sequence contains 'A' (adenine), but doesn't contain neither 'T' nor 'U'
or logical indicating is typed wrong (i.e., when sequence contain 'U' and logical indicating is set to dna) error will appear.
Both rna and dna sequences can be rewritten to complementary sequence.
}
\examples{
# creating objects to work on:
nuc_dna_sequence <- construct_sq(c("ACTGCTG", "CTTAGA", "CCCT", "CTGAATGT"), type = "nuc")
nuc_rna_sequence <- construct_sq(c("ACUGCUG", "CUUAGA", "CCCU", "CUGAAUGU"), type = "nuc")


#creating complementary sequences with defined sequence type:
complement(nuc_dna_sequence, is_dna = TRUE)
complement(nuc_rna_sequence, is_dna = FALSE)

#creating complementary sequences without defined sequence type:
complement(nuc_dna_sequence)
complement(nuc_rna_sequence)

}
\seealso{
sq clnsq nucsq
}
