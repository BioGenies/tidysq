% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/remove_na.R
\name{remove_na}
\alias{remove_na}
\alias{remove_na.sq}
\title{Remove sequences that contain NA values}
\usage{
remove_na(x, by_letter = FALSE, ...)

\method{remove_na}{sq}(x, by_letter = FALSE, ..., NA_letter = getOption("tidysq_NA_letter"))
}
\arguments{
\item{x}{[\code{sq}]\cr
An object this function is applied to.}

\item{by_letter}{[\code{logical(1)}]\cr
If \code{FALSE}, filter condition is applied to sequence as a whole. If
\code{TRUE}, each letter is applied filter to separately.}

\item{...}{further arguments to be passed from or to other methods.}

\item{NA_letter}{[\code{character(1)}]\cr
A string that is used to interpret and display \code{NA} value in the
context of \code{\link[=sq-class]{sq class}}. Default value equals to
"\code{!}".}
}
\value{
An \code{\link[=sq-class]{sq}} object with the same type as the
input type. Sequences that do not contain any \code{NA} values are left
unchanged.
}
\description{
This function replaces sequences with \code{NA} values by
empty (\code{NULL}) sequences or removes \code{NA} values from sequences
in an \code{sq} object.
}
\details{
\code{NA} may be introduced as a result of using functions like
\code{\link{substitute_letters}} or \code{\link{bite}}. They can also appear
in sequences if the user reads FASTA file using \code{\link{read_fasta}} or
constructs \code{sq} object from \code{\link{character}} vector with
\code{\link{sq}} function without \code{safe_mode} turned on - and there are
letters in file or strings other than specified in the alphabet.

\code{remove_na()} is used to filter out sequences or elements that have
\code{NA} value(s). By default, if any letter in a sequence is \code{NA},
then whole sequence is replaced by empty (\code{NULL}) sequence. However, if
\code{by_letter} parameter is set to \code{TRUE}, then sequences are
only shortened by excluding \code{NA} values.
}
\examples{
# Creating objects to work on:
sq_ami <- sq(c("MIAANYTWIL","TIAALGNIIYRAIE", "NYERTGHLI", "MAYXXXIALN"),
             alphabet = "ami_ext")
sq_dna <- sq(c("ATGCAGGA", "GACCGAACGAN", "TGACGAGCTTA", "ACTNNAGCN"),
             alphabet = "dna_ext")

# Substituting some letters with NA
sq_ami_sub <- substitute_letters(sq_ami, c(E = NA, R = NA))
sq_dna_sub <- substitute_letters(sq_dna, c(N = NA))

# Biting sequences out of range
sq_bitten <- bite(sq_ami, 1:15)

# Printing the sequences
sq_ami_sub
sq_dna_sub

# Removing sequences containing NA
remove_na(sq_ami_sub)
remove_na(sq_dna_sub)
remove_na(sq_bitten)

# Removing only NA elements
remove_na(sq_ami_sub, by_letter = TRUE)
remove_na(sq_dna_sub, TRUE)
remove_na(sq_bitten, TRUE)

}
\seealso{
\code{\link[=sq-class]{sq}}

Functions that clean sequences:
\code{\link{is_empty_sq}()},
\code{\link{remove_ambiguous}()}
}
\concept{cleaning_functions}
